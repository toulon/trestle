{
  "name": "trestle",
  "description": "Opinionated project generator for node.js relying on express, jade, stylus, Bootstrap 3, and mongoose.",
  "version": "0.2.2",
  "bin": {
    "trestle": "bin/cli.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/toulon/trestle"
  },
  "author": {
      "name": "Norman Cdoer",
      "email": "toulon4u@gmail.com"
  },
  "contributors": [
    {
      "name": "Christoph Walcher",
      "email": "christoph.walcher@gmail.com",
      "name": "Dave Jensen",
      "email": "david@jensen47.com"
    }
  ],
  "license": "BSD",
  "keywords": [
    "web",
    "project generator",
    "scaffold",
    "express"
  ],
  "dependencies": {
    "ejs": "0.8.x",
    "optimist": "0.6.x",
    "wrench": "1.5.x",
    "fleck": "0.5.x",
    "prompt": "0.2.x"
  },
  "devDependencies": {
    "mocha": "1.10.x",
    "should": "1.2.x"
  },
  "scripts": {
    "test": "mocha"
  },
  "readme": "![Logo](https://raw.github.com/toulon/trestle/master/assets/logo.png)\n\nTrestle is an opinionated scaffolding tool for node.js that originated from [bumm](https://github.com/saintedlama/bumm). Bumm is great but I wish to take Trestle in a different direction. There may have been a good reason to call the tool \"bumm\" but I never understood it. \"Trestle\" on the other hand is a construction term, similar to but not the same as scaffolding.\n\n> **trestle** /tr…ôs/ *noun* a framework, typically consisting of rafters, posts, and struts, supporting a roof, bridge, or other structure\n\nGenerated projects rely on [express](http://expressjs.com/) and [mongoose](http://mongoosejs.com/) without any persistence abstractions, \nadditional libraries or frameworks. Just plain express and mongoose!\n\n# Roadmap\n**Done**\n- ~~Rename to Truss~~\n- ~~Switch to Bootstrap 3.0~~\n- ~~Use latest Jade syntax~~\n\n**Doing**\n- ~~Fix the issue with using ObjectId on the command line~~\n- ~~Update JavaScript code to conform to standard Node.js style guidelines~~\n- DRY up the code as needed\n- Make stylus+nib support an option\n- Make less support an option\n- Fix errors with generating resources\n- You should be able to scaffold a new app into an existing directory\n- Make all config Heroku ready\n\n**Future**\n- Replace i18n-2 support with Air BNB's [polyglot.js](https://github.com/airbnb/polyglot.js)\n- Authentication\n- Ember.js\n\n# Installing Truss\n\n\tnpm install trestle -g\n\n# Mini Tutorial\n\nFirst cd to the directory where the project should be created\n\n\tcd /path/to/projects/root\n\nCreate a project skeleton via\n\n\ttrestle app testapp\n\nNext cd to testapp\n\n\tcd testapp\n\nAnd install required packages through npm\n\n\tnpm install\n\n## Scaffolding\nCreate a model, route and views via `scaffold` command. The model\nshould have two properties \"title\" and \"description\" where title is required.\n\n\ttrestle scaffold test title:string:required:true description\n\n\nModel validators are specified after property name and type in plain mongoose syntax. In case\nno type is specified the property will be of type string.\n\nMongoose types 'String', 'Number', 'Date', 'Buffer', 'Boolean', 'ObjectId', 'Array' are supported. Additionally\nthe types 'Datetime' and 'Textarea' are supported which result in a datetime html 5 input tag and a textbox tag.\nTypes are case insensitive.\n\n\nNow start `node app.js` and navigate your browser to `http://localhost:3000/tests`\n\n### Scaffolding restful routes\n\nYou can create a JSON REST endpoint by scaffolding a model and its corresponding routes. The arguments are the same as above, but instead of _scaffold_ use _scafffold:rest_ like this\n\n\ttrestle resource post title:string:required:true description\n\n\n# Usage\n\n```\nProject generator for node.js using express and mongoose\n\nUsage:\n  trestle [options] command [arguments]\n\nOptions:\n  --help, -h                 Output this usage dialog\n  --version, -v              Output the version of trestle\n\nCommands:\n  app <name>                 Create a new application\n  scaffold <name> [attrib]   Create a new route, model and views for <name>\n  resource <name> [attrib]   Creates a model and route for resource <name>\n  view <name> [attrib]       Creates views for a <name>\n  route <name> [attrib]      Creates a route for a <name>\n  model <name> [attrib]      Creates a new mongoose model for a <name>\n\nname:\n  Name should be provided as singular, so use `item` instead of `items`. For\n  `scaffold`, `view`, `route`, `resource`, `model` commands name\n  accepts a path prefix. For example `admin/item` will create model, routes and\n  views in an admin directory. Routes will then point to `/admin/items`. This\n  option can be useful if you plan to add some authentication based on routes\n  later on.\n\nattrib:\n  Attributes are used to describe properties of models used in routes, views\n  and of course models using the schema:\n\n  name:type:validator:validatorValue:validator:validatorValue...\n\nExamples:\n  trestle app todo              Generates an express app skeleton\n  trestle scaffold item         Generates item model, route and views supporting\n                             basic CRUD operations\n  trestle view item             Generates item views\n\n  trestle scaffold item name:string:required:true\n\n                             Generates item model, route and views with a single\n                             property \"name\" that is required.\n```\n\n# What trestle creates\n\nAfter executing `trestle app someappname` you'll find the following structure in your file system.\n\n    |   app.js\n    |   helpers.js\n    |   package.json\n    |   README.md\n    |\n    +---config\n    |       defaults.js\n    |       development.js\n    |       index.js\n    |       production.js\n    |\n    +---lib\n    |       model-mapper.js\n    |\n    +---public\n    |   +---css\n    |   |       custom.css\n    |   |\n    |   \\---vendor\n    |       +---bootstrap\n    |       |   +---css\n    |       |   |       bootstrap-responsive.css\n    |       |   |       bootstrap-responsive.min.css\n    |       |   |       bootstrap.css\n    |       |   |       bootstrap.min.css\n    |       |   |\n    |       |   +---img\n    |       |   |       glyphicons-halflings-white.png\n    |       |   |       glyphicons-halflings.png\n    |       |   |\n    |       |   \\---js\n    |       |           bootstrap.js\n    |       |           bootstrap.min.js\n    |       |\n    |       \\---jquery\n    |           \\---js\n    |                   jquery.min.js\n    |\n    +---routes\n    |       index.js\n    |\n    \\---views\n        |   index.jade\n        |   layout.jade\n        |\n        \\---mixins\n                form-helpers.jade\n\n## Application structure explained\n\n### app.js\nCreates and initializes an express app with a mongoDb connection configured. Routes will be setup by requiring the routes\ndirectory directly. See routes below.\n\n### helpers.js \nDefines some jade/html helpers for displaying error messages and displaying values.\n\n### package.json \nInitial package with value entered in the prompt dialog\n\n### README.md \nEmpty readme to silence npm\n\n### config\nThe config directory is required by `app.js` to load the configuration files. Truss assumes that you have three config files\n\n* __defaults__ Defines defaults that are used in development and production mode\n* __development__ Defines configuration values used in development mode only\n* __production__ Defines configuration values used in production mode only\n\nTruss loads defaults first, then loads the configuration file `development` or `production` depending on the current `NODE_ENV`\nenvironment variable and overrides all default values with the development or production values.\n\n### lib\nTruss ships with a single library file that is responsible to map values provided in request body to a mongoose\nmodel.\n\n### public\nThe public folder contains a quite up to date version of [twitter bootstrap](http://twitter.github.com/bootstrap/) under `vendor/boostrap`,\nan up to date version of [jQuery](http://jquery.com/) under `vendor/jquery` and a `custom.css` file under css.\n\nTruss organizes all shipped 3rd party css/javascript libraries are placed in the `vendor` directory and follows a `js`, `css`, `img` schema\nfor vendor libraries. You are free to place your libraries wherever you want :)\n\n### routes\nAll generated routes will be generated under routes. After creating an app with Truss, you'll find a single `index.js` file in\nthis folder. Index.js requires all files that are in or routes or a sub directory of routes to initialize the route. In case\nyou require a route to be defined before another route you can always require that route in `index.js` or load routes manually\nin a defined order.\n\nindex.js also defines a route to `/` to render a nice getting started page. This functionality can be removed without harming\nthe system!\n\n### views\nAll generated view will be generated under views. After creating an app with Truss, you'll find an index.jade that is a welcome\nfile to display some help text or defined routes, a layout.jade file that defines the layout used by all generated views and\na mixin folder that defines mixins used in Truss generated views.\n\n## Truss Change Log\n\n### 0.2.2\n\n* Fixed indentation to comply with Node.js style guides\n* Added a form helper for single select boxes \n\n### 0.2.1\n\n* Updated the edit and create templates to use the same form\n* Fixed issue with ObjectId not working in model creation\n\n### 0.2.0\n\n* Added Bootstrap 3 support\n* Errors on forms now use Bootstrap 3 class \"has-error\"\n* Mixin invocation uses the now standard \"+\" symbol instead of \"mixin\"\n\n## Bumm Change Log\n### 0.1.5 \n\n* Add option to use mongodb session store\n* Support directories when scaffolding models, views and routes\n* Render a nice start page\n* Support rest resources for api services\n\n### 0.1.4\n \n* Express and Mongoose updates\n* Fix startup scripts\n* Provide better error messages\n* Use mixins to render forms\n\n### 0.1.3 \n\n* Add `npm init` like prompt to specify generated package.json values by [thomas peklak](https://github.com/thomaspeklak)\n\n### 0.1.2 \n\n* Minor bug fixes in views\n* Basic support for array types\n* Reorganizes public assets in vendor folder\n* Disable 'x-powered-by' header\n\n### 0.1.1 \n\n* Bootstrap update\n* Mongoose update\n\n### 0.1.0\n \n* Initial version\n",
  "readmeFilename": "README.md",
  "_id": "trestle@0.2.3",
  "dist": {
    "shasum": "0d592f97f9590d985c9a5a59ed8c1d19681444d2"
  },
  "_from": "trestle"
}
